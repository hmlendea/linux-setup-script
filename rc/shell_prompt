#!/bin/sh
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

ENABLE_COLOURS=true
ENABLE_GIT=true
ENABLE_GIT_STATUS=true

function get_git_prompt {
    [ ! ${ENABLE_GIT} ] && return

    BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

    [ -z "${BRANCH_NAME}" ] && return

    BRANCH_STATUS=$(get_git_branch_status)

    BRANCH_NAME_COLOUR="36"
    BRANCH_STATUS_COLOUR=""
    BRANCH_STATUS_INDICATOR=""

    if [ "${BRANCH_NAME}" = "HEAD" ]; then
        BRANCH_NAME_COLOUR="41"
    elif [ "${BRANCH_NAME}" = "master" ]; then
        BRANCH_NAME_COLOUR="93"
    fi

    if [ "${BRANCH_STATUS}" = "local-changes" ]; then
        BRANCH_STATUS_COLOUR="32"
        BRANCH_STATUS_INDICATOR="*" #" ■"
    elif [ "${BRANCH_STATUS}" = "local-only" ]; then
        BRANCH_STATUS_COLOUR="93"
        BRANCH_STATUS_INDICATOR="~"
    elif [ "${BRANCH_STATUS}" = "behind" ]; then
        BRANCH_STATUS_COLOUR="31"
        BRANCH_STATUS_INDICATOR="-" #" ▼"
    elif [ "${BRANCH_STATUS}" = "ahead" ]; then
        BRANCH_STATUS_COLOUR="92"
        BRANCH_STATUS_INDICATOR="+" #" ▲"
    elif [ "${BRANCH_STATUS}" = "diverged" ]; then
        BRANCH_STATUS_COLOUR="91"
        BRANCH_STATUS_INDICATOR="±" #" ♦"
    fi

    [ -n "${BRANCH_STATUS_INDICATOR}" ] && BRANCH_STATUS_INDICATOR=" ${BRANCH_STATUS_INDICATOR}"

    PS1_BRANCH_SEPARATOR1="("
    PS1_BRANCH_NAME=${BRANCH_NAME}
    PS1_BRANCH_STATUS=${BRANCH_STATUS_INDICATOR}
    PS1_BRANCH_SEPARATOR2=")"

    if ${ENABLE_COLOURS}; then
        PS1_BRANCH_SEPARATOR1="\033[0m${PS1_BRANCH_SEPARATOR1}"
        PS1_BRANCH_NAME="\033[00;${BRANCH_NAME_COLOUR}m${BRANCH_NAME}"
        PS1_BRANCH_STATUS="\033[00;${BRANCH_STATUS_COLOUR}m${BRANCH_STATUS_INDICATOR}"
        PS1_BRANCH_SEPARATOR2="\033[0m${PS1_BRANCH_SEPARATOR2}"
    fi

    echo -e -n "${PS1_BRANCH_SEPARATOR1}${PS1_BRANCH_NAME}${PS1_BRANCH_STATUS}${PS1_BRANCH_SEPARATOR2} "
}

function get_git_branch_status {
    UPSTREAM=${1:-'@{u}'}
    LOCAL=$(git rev-parse @)
    REMOTE=$(git rev-parse "$UPSTREAM" 2>/dev/null)

    if [ -z ${REMOTE} ]; then
       echo "local-only"
    else
        BASE=$(git merge-base @ "$UPSTREAM")
        LOCAL_CHANGES=$(git diff-index --name-only HEAD --)

        if [ ${LOCAL} = ${REMOTE} ]; then
            if [ -z "${LOCAL_CHANGES}" ]; then
                echo "up-to-date"
            else
                echo "local-changes"
            fi
        elif [ ${LOCAL} = ${BASE} ]; then
            echo "behind"
        elif [ ${REMOTE} = ${BASE} ]; then
            echo "ahead"
        else
            echo "diverged"
        fi
    fi
}

function get_path {
    MAX_LENGTH=24
    CWD=${PWD##*/}

    if [ "$HOME" = "$PWD" ]; then
        echo "~"
    elif [ ${#CWD} -gt $((MAX_LENGTH)) ]; then
        echo ${CWD:0:$((MAX_LENGTH/2-1))}..${CWD:(-$((MAX_LENGTH/2-1)))}
    elif [ "${PWD}" = "/${CWD}" ]; then
        echo ${PWD}
    else
        echo ${CWD}
    fi
}

function get_path_colour {
    if [[ "${PWD}" = "/" ]]; then
        echo "41"
    elif [[ "${PWD}" = "/root" ]]; then
        echo "41"
    elif [[ "${PWD}" = "/root/*" ]]; then
        echo "41"
    elif [[ "${PWD}" = "/home/${USER}" ]]; then
        echo "93"
    elif [[ ! -w "${PWD}" ]]; then
        echo "31"
    else
        echo "33"
    fi
}

function set_custom_prompt {
    local userColour="34"   # Default = blue
    local hostColour="32"   # Default = green

    local separator1="@"
    local separator2=":"
    local separator3=">"

    [ "$(whoami)" = "root" ]   && userColour="31" # Root = red
    [ "$(whoami)" = "guest" ]  && userColour="33" # Guest = yellow

    [[ ${HOSTNAME} = *Craft ]]     && hostColour="92" # Game Server = Light Green
    [[ ${HOSTNAME} = *Pi ]]        && hostColour="95" # RaspberryPi = Light Magenta
    [[ ${HOSTNAME} = RetroPie ]]   && hostColour="96" # RetroPie = Light Cyan

    local ps1user="$USER"
    local ps1host="\h"
    local ps1path='$(get_path)'

    if ${ENABLE_COLOURS}; then
        ps1user="\[\e[01;${userColour}m\]${ps1user}\[\e[m\]"
        ps1host="\[\e[${hostColour}m\]${ps1host}\[\e[m\]"
        ps1path="\[\e[\$(get_path_colour)m\]${ps1path}\[\e[m\]"
    fi

    export PS1="$ps1user$separator1$ps1host$separator2${ps1path} \$(get_git_prompt)$separator3 "
}

if [ -z "${USER}" ] && [ ! -z "${USERNAME}" ]; then
    export USER=${USERNAME}
fi

set_custom_prompt
