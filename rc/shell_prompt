#!/bin/sh
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

ENABLE_COLOURS=true
ENABLE_GIT=true
ENABLE_GIT_STATUS=true

function get_git_prompt {
    ! ${ENABLE_GIT} && return

    local BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

    [ -z "${BRANCH_NAME}" ] && return

    BRANCH_NAME_STYLE="00" # Not bold
    BRANCH_NAME_COLOUR="36"

    if [ "${BRANCH_NAME}" = "HEAD" ]; then
        BRANCH_NAME_STYLE="01" # Bold
        BRANCH_NAME_COLOUR="41" # Red background
    elif [[ "${BRANCH_NAME}" == "main" ]] \
      || [[ "${BRANCH_NAME}" == "master" ]]; then
        BRANCH_NAME_STYLE="01" # Bold
        BRANCH_NAME_COLOUR="93" # Light Yellow
    fi

    if ${ENABLE_GIT_STATUS} ; then
        BRANCH_STATUS=$(get_git_branch_status)
        BRANCH_STATUS_COLOUR=""
        BRANCH_STATUS_INDICATOR=""

        if [ "${BRANCH_STATUS}" = "local-changes" ]; then
            BRANCH_STATUS_COLOUR="32"
            BRANCH_STATUS_INDICATOR="*" #" ■"
        elif [ "${BRANCH_STATUS}" = "local-only" ]; then
            BRANCH_STATUS_COLOUR="93"
            BRANCH_STATUS_INDICATOR="~"
        elif [ "${BRANCH_STATUS}" = "behind" ]; then
            BRANCH_STATUS_COLOUR="31"
            BRANCH_STATUS_INDICATOR="-" #" ▼"
        elif [ "${BRANCH_STATUS}" = "ahead" ]; then
            BRANCH_STATUS_COLOUR="92"
            BRANCH_STATUS_INDICATOR="+" #" ▲"
        elif [ "${BRANCH_STATUS}" = "diverged" ]; then
            BRANCH_STATUS_COLOUR="91"
            BRANCH_STATUS_INDICATOR="±" #" ♦"
        fi

        [ -n "${BRANCH_STATUS_INDICATOR}" ] && BRANCH_STATUS_INDICATOR=" ${BRANCH_STATUS_INDICATOR}"
    fi

    PS1_BRANCH_SEPARATOR1="("
    PS1_BRANCH_NAME=${BRANCH_NAME}
    PS1_BRANCH_STATUS=${BRANCH_STATUS_INDICATOR}
    PS1_BRANCH_SEPARATOR2=")"

    if ${ENABLE_COLOURS}; then
        PS1_BRANCH_SEPARATOR1="\001\033[0m\002${PS1_BRANCH_SEPARATOR1}"
        PS1_BRANCH_NAME="\001\033[${BRANCH_NAME_STYLE};${BRANCH_NAME_COLOUR}m\002${BRANCH_NAME}"
        [ -n "${PS1_BRANCH_STATUS}" ] && PS1_BRANCH_STATUS="\001\033[00;${BRANCH_STATUS_COLOUR}m\002${BRANCH_STATUS_INDICATOR}"
        PS1_BRANCH_SEPARATOR2="\001\033[0m\002${PS1_BRANCH_SEPARATOR2}"
    fi

    echo -e -n "${PS1_BRANCH_SEPARATOR1}${PS1_BRANCH_NAME}${PS1_BRANCH_STATUS}${PS1_BRANCH_SEPARATOR2} "
}

function get_git_branch_status {
    local UPSTREAM=${1:-'@{u}'}
    local REMOTE=$(git rev-parse "${UPSTREAM}" 2>/dev/null)

    if [ -z ${REMOTE} ]; then
       echo "local-only"
	   return
	fi

    local LOCAL=$(git rev-parse @)

    if [ ${LOCAL} = ${REMOTE} ]; then
		local LOCAL_CHANGES=$(git diff-index --name-only HEAD --)

        if [ -n "${LOCAL_CHANGES}" ]; then
            echo "local-changes"
        else
            echo "up-to-date"
        fi
	else
		local BASE=$(git merge-base @ "${UPSTREAM}")

		if [ ${LOCAL} = ${BASE} ]; then
			echo "behind"
		elif [ ${REMOTE} = ${BASE} ]; then
			echo "ahead"
		else
			echo "diverged"
		fi
	fi
}

function get_path {
    MAX_LENGTH=24
    CWD=${PWD##*/}

    if [ "${HOME}" = "${PWD}" ]; then
        echo "~"
    elif [ ${#CWD} -gt $((MAX_LENGTH)) ]; then
        echo ${CWD:0:$((MAX_LENGTH/2-1))}..${CWD:(-$((MAX_LENGTH/2-1)))}
    elif [ "${PWD}" = "/${CWD}" ]; then
        echo ${PWD}
    else
        echo ${CWD}
    fi
}

function get_path_colour {
    if [[ "${PWD}" = "/" ]]; then
        echo "41"
    elif [[ "${PWD}" = "/root" ]]; then
        echo "41"
    elif [[ "${PWD}" = "/root/*" ]]; then
        echo "41"
    elif [[ "${PWD}" == "/home/${USER}" ]] ||
         [[ "${PWD}" == "${HOME}" ]]; then
        echo "93"
    elif [[ ! -w "${PWD}" ]]; then
        echo "31"
    else
        echo "33"
    fi
}

function set_custom_prompt {
    local userColour="34"   # Default = blue
    local hostColour="32"   # Default = green

    local separator1="@"
    local separator2=":"
    local separator3=">"

    local CURRENT_USERNAME="$(whoami)"

    [ "${CURRENT_USERNAME}" = "root" ]   && userColour="31" # Root = red
    [ "${CURRENT_USERNAME}" = "guest" ]  && userColour="33" # Guest = yellow

    if [[ ${HOSTNAME} = *Assistant ]]; then
        hostColour="94" # HomeAssistant = Light Blue
    elif [[ ${HOSTNAME} = *Craft ]]; then
        hostColour="92" # Game Server = Light Green
    elif [[ ${HOSTNAME} = *Pi ]] \
      || [[ ${HOSTNAME} = *Berry* ]]; then
        hostColour="95" # RaspberryPi = Light Magenta
    elif [[ ${HOSTNAME} = RetroPie ]]; then
        hostColour="96" # RetroPie = Light Cyan
    elif [[ ${HOSTNAME} = Telefon-* ]] || \
         [[ -d "/data/data/com.termux/files" ]]; then
        hostColour="93" # Phone = Light Yellow
    fi

    local ps1user="${USER}"
    local ps1host='${HOSTNAME}' # "\h"
    local ps1path='$(get_path)'

    if ${ENABLE_COLOURS}; then
        ps1user="\[\e[01;${userColour}m\]${ps1user}\[\e[m\]"
        ps1host="\[\e[${hostColour}m\]${ps1host}\[\e[m\]"
        ps1path="\[\e[\$(get_path_colour)m\]${ps1path}\[\e[m\]"
    fi

    export PS1="$ps1user$separator1$ps1host$separator2${ps1path} \$(get_git_prompt)$separator3 "
}

set_custom_prompt
