#!/bin/sh
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

ROOT_PATH=""
[ -d "/data/data/com.termux" ] && ROOT_PATH="/data/data/com.termux/files/usr"

ROOT_BIN="${ROOT_PATH}/bin"
ROOT_OPT="${ROOT_PATH}/opt"
ROOT_USR="${ROOT_PATH}/usr"
ROOT_USR_BIN="${ROOT_USR}/bin"
ROOT_USR_SHARE="${ROOT_USR}/share"

### Environment variables
#export TERM=linux
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH-}:/usr/lib32"

# Shell
export SHELL="${ROOT_BIN}/bash"
export HISTSIZE=10000           # Set the Bash history size to 10K entries
export HISTCONTROL=ignoredups   # Ignore repeated entries in the Bash history

# Shell colours
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;36m' # Cyan
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;97m' # White
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;033m'

# User
if [ -z "${USER}" ]; then
    if [ -n "${USERNAME}" ]; then
        export USER="${USERNAME}"
    else
        export USER="$(whoami)"
        export USERNAME="${USER}"
    fi
fi

# Others
export OLDPWD=$(pwd)
export OLDPWD2=${OLDPWD}

[ -f "${ROOT_USR_BIN}/nano" ]    && export EDITOR=nano       # Make nano the default editor
[ -f "${ROOT_USR_BIN}/optirun" ] && export VGL_READBACK=pbo  # Better optirun performance

if [ -f "${ROOT_USR_BIN}/paru" ]; then
    PACKAGE_MANAGER="paru"
elif [ -f "${ROOT_USR_BIN}/yay" ]; then
    PACKAGE_MANAGER="yay"
elif [ -f "${ROOT_USR_BIN}/yaourt" ]; then
    PACKAGE_MANAGER="yaourt"
else
    PACKAGE_MANAGER="pacman"
fi

if [ -f "${ROOT_USR_BIN}/dotnet" ]; then
    export DOTNET_CLI_TELEMETRY_OPTOUT=1        # Disable .NET Core telemetry
    export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1  # Disable .NET Core first time message

    [ -d "${ROOT_OPT}/dotnet/" ]       &&   export DOTNET_ROOT="${ROOT_OPT}/dotnet/"        # .NET Root
    [ -d "${ROOT_USR_SHARE}/dotnet/" ] &&   export DOTNET_ROOT="${ROOT_USR_SHARE}/dotnet/"  # .NET Root

    # MS Build and Mono coexistance
    [ ! -z "${DOTNET_ROOT}" ]   &&  export MSBuildSDKsPath=$(printf "%s\n" ${DOTNET_ROOT}/sdk/*  | tail -1)"/Sdks/"

    DOTNET_TOOLS_DIR="${HOME}/.dotnet/tools"
    [ -d "${DOTNET_TOOLS_DIR}" ] && export PATH="$PATH:${DOTNET_TOOLS_DIR}"
fi
