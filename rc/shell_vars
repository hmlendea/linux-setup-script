#!/bin/sh
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

### Environment variables
#export TERM=linux
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH-}:/usr/lib32"
export SHELL="/bin/bash"

if [ -z "${USER}" ]; then
    if [ ! -z "${USERNAME}" ]; then
        export USER=${USERNAME}
    else
        export USER=$(whoami)
    fi
fi

[ -f "/usr/bin/nano" ]      &&  export EDITOR=nano                          # Make nano the default editor
[ -f "/usr/bin/optirun" ]   &&  export VGL_READBACK=pbo                     # Better optirun performance

if [ -f "/usr/bin/paru" ]; then
    PACKAGE_MANAGER="paru"
elif [ -f "/usr/bin/yay" ]; then
    PACKAGE_MANAGER="yay"
elif [ -f "/usr/bin/yaourt" ]; then
    PACKAGE_MANAGER="yaourt"
else
    PACKAGE_MANAGER="pacman"
fi

if [ "/usr/bin/dotnet" ]; then
    export DOTNET_CLI_TELEMETRY_OPTOUT=1        # Disable .NET Core telemetry
    export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1  # Disable .NET Core first time message

    [ -d "/opt/dotnet/" ]       &&  export DOTNET_ROOT="/opt/dotnet/"           # .NET Root
    [ -d "/usr/share/dotnet/" ] &&  export DOTNET_ROOT="/usr/share/dotnet/"     # .NET Root

    # MS Build and Mono coexistance
    [ ! -z "${DOTNET_ROOT}" ]   &&  export MSBuildSDKsPath=$(printf "%s\n" ${DOTNET_ROOT}/sdk/*  | tail -1)"/Sdks/"

    DOTNET_TOOLS_DIR="${HOME}/.dotnet/tools"
    [ -d "${DOTNET_TOOLS_DIR}" ] && export PATH="$PATH:${DOTNET_TOOLS_DIR}"
fi
