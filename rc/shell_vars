#!/bin/sh
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

function does-bin-exist() {
    BIN="${@}"

    if [ "${BIN:0:1}" == "/" ] && [ -f "${BIN}" ]; then
        return true
    elif [ $(does-bin-exist "${BIN}") ] ||
         [ -f "/data/data/com.termux/files/usr/bin/${BIN}" ]; then
        return true
    else
        return false
    fi
}

### Environment variables
#export TERM=linux
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH-}:/usr/lib32"
export SHELL="/bin/bash"

if [ -z "${USER}" ]; then
    if [ ! -z "${USERNAME}" ]; then
        export USER="${USERNAME}"
    else
        export USER="$(whoami)"
        export USERNAME="${USER}"
    fi
fi

[ $(does-bin-exist "nano") ]    && export EDITOR=nano       # Make nano the default editor
[ $(does-bin-exist "optirun") ] && export VGL_READBACK=pbo  # Better optirun performance

if [ $(does-bin-exist "paru") ]; then
    PACKAGE_MANAGER="paru"
elif [ $(does-bin-exist "yay") ]; then
    PACKAGE_MANAGER="yay"
elif [ $(does-bin-exist "yaourt") ]; then
    PACKAGE_MANAGER="yaourt"
else
    PACKAGE_MANAGER="pacman"
fi

if [ $(does-bin-exist "dotnet") ]; then
    export DOTNET_CLI_TELEMETRY_OPTOUT=1        # Disable .NET Core telemetry
    export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1  # Disable .NET Core first time message

    [ -d "/opt/dotnet/" ]       &&  export DOTNET_ROOT="/opt/dotnet/"           # .NET Root
    [ -d "/usr/share/dotnet/" ] &&  export DOTNET_ROOT="/usr/share/dotnet/"     # .NET Root

    # MS Build and Mono coexistance
    [ ! -z "${DOTNET_ROOT}" ]   &&  export MSBuildSDKsPath=$(printf "%s\n" ${DOTNET_ROOT}/sdk/*  | tail -1)"/Sdks/"

    DOTNET_TOOLS_DIR="${HOME}/.dotnet/tools"
    [ -d "${DOTNET_TOOLS_DIR}" ] && export PATH="$PATH:${DOTNET_TOOLS_DIR}"
fi
